//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: _java/com/kloudtek/util/crypto/AsymmetricAlgorithm.java
//
//  Created by yinkaf on 6/11/14.
//

#include "AsymmetricAlgorithm.h"
#include "IOSClass.h"
#include "java/lang/Enum.h"
#include "java/lang/IllegalArgumentException.h"

BOOL ComKloudtekUtilCryptoAsymmetricAlgorithmEnum_initialized = NO;

ComKloudtekUtilCryptoAsymmetricAlgorithmEnum *ComKloudtekUtilCryptoAsymmetricAlgorithmEnum_values[1];

@implementation ComKloudtekUtilCryptoAsymmetricAlgorithmEnum

- (id)copyWithZone:(NSZone *)zone {
  return self;
}

- (id)initWithNSString:(NSString *)__name withInt:(int)__ordinal {
  if ((self = [super initWithNSString:__name withInt:__ordinal])) {
    jceId_ = [self name];
  }
  return self;
}

- (id)initWithNSString:(NSString *)jceId
          withNSString:(NSString *)cryptAlg
          withNSString:(NSString *)__name
               withInt:(int)__ordinal {
  if ((self = [super initWithNSString:__name withInt:__ordinal])) {
    self->jceId_ = jceId;
    self->cryptAlg_ = cryptAlg;
  }
  return self;
}

- (id)initWithNSString:(NSString *)jceId
          withNSString:(NSString *)__name
               withInt:(int)__ordinal {
  if ((self = [super initWithNSString:__name withInt:__ordinal])) {
    self->jceId_ = jceId != nil ? jceId : [self name];
  }
  return self;
}

- (NSString *)getJceId {
  return jceId_;
}

- (NSString *)getCryptAlg {
  return cryptAlg_;
}

+ (void)initialize {
  if (self == [ComKloudtekUtilCryptoAsymmetricAlgorithmEnum class]) {
    ComKloudtekUtilCryptoAsymmetricAlgorithmEnum_RSA = [[ComKloudtekUtilCryptoAsymmetricAlgorithmEnum alloc] initWithNSString:@"RSA" withNSString:@"RSA/ECB/PKCS1PADDING" withNSString:@"RSA" withInt:0];
    ComKloudtekUtilCryptoAsymmetricAlgorithmEnum_initialized = YES;
  }
}

+ (IOSObjectArray *)values {
  return [IOSObjectArray arrayWithObjects:ComKloudtekUtilCryptoAsymmetricAlgorithmEnum_values count:1 type:[IOSClass classWithClass:[ComKloudtekUtilCryptoAsymmetricAlgorithmEnum class]]];
}

+ (ComKloudtekUtilCryptoAsymmetricAlgorithmEnum *)valueOfWithNSString:(NSString *)name {
  for (int i = 0; i < 1; i++) {
    ComKloudtekUtilCryptoAsymmetricAlgorithmEnum *e = ComKloudtekUtilCryptoAsymmetricAlgorithmEnum_values[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw [[JavaLangIllegalArgumentException alloc] initWithNSString:name];
  return nil;
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "init", "AsymmetricAlgorithm", NULL, 0x2, NULL },
    { "initWithNSString:withNSString:", "AsymmetricAlgorithm", NULL, 0x2, NULL },
    { "initWithNSString:", "AsymmetricAlgorithm", NULL, 0x2, NULL },
    { "getJceId", NULL, "Ljava.lang.String;", 0x1, NULL },
    { "getCryptAlg", NULL, "Ljava.lang.String;", 0x1, NULL },
  };
  static const char *superclass_type_args[] = {"Lcom.kloudtek.util.crypto.AsymmetricAlgorithm;"};
  static J2ObjcClassInfo _ComKloudtekUtilCryptoAsymmetricAlgorithmEnum = { "AsymmetricAlgorithm", "com.kloudtek.util.crypto", NULL, 0x4011, 5, methods, 0, NULL, 1, superclass_type_args};
  return &_ComKloudtekUtilCryptoAsymmetricAlgorithmEnum;
}

@end
