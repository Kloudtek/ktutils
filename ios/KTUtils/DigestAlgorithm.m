//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: _java/com/kloudtek/util/crypto/DigestAlgorithm.java
//
//  Created by yinkaf on 6/14/14.
//

#include "DigestAlgorithm.h"
#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "java/lang/Enum.h"
#include "java/lang/IllegalArgumentException.h"

BOOL ComKloudtekUtilCryptoDigestAlgorithmEnum_initialized = NO;

ComKloudtekUtilCryptoDigestAlgorithmEnum *ComKloudtekUtilCryptoDigestAlgorithmEnum_values[4];

@implementation ComKloudtekUtilCryptoDigestAlgorithmEnum

- (id)copyWithZone:(NSZone *)zone {
  return self;
}

- (id)initWithInt:(int)hashLen
     withNSString:(NSString *)__name
          withInt:(int)__ordinal {
  if ((self = [super initWithNSString:__name withInt:__ordinal])) {
    [self init__WithInt:hashLen withNSString:[self name]];
  }
  return self;
}

- (id)initWithInt:(int)hashLen
     withNSString:(NSString *)jceId
     withNSString:(NSString *)__name
          withInt:(int)__ordinal {
  if ((self = [super initWithNSString:__name withInt:__ordinal])) {
    [self init__WithInt:hashLen withNSString:jceId];
  }
  return self;
}

- (void)init__WithInt:(int)hashLen
         withNSString:(NSString *)jceId {
  self->hashLen_ = hashLen;
  self->jceId_ = jceId;
}

- (NSString *)getJceId {
  return jceId_;
}

- (int)getHashLen {
  return hashLen_;
}

+ (ComKloudtekUtilCryptoDigestAlgorithmEnum *)getWithNSString:(NSString *)id_ {
  id_ = [((NSString *) nil_chk(id_)) uppercaseString];
  {
    IOSObjectArray *a__ = [ComKloudtekUtilCryptoDigestAlgorithmEnum values];
    ComKloudtekUtilCryptoDigestAlgorithmEnum * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    ComKloudtekUtilCryptoDigestAlgorithmEnum * const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      ComKloudtekUtilCryptoDigestAlgorithmEnum *alg = (*b__++);
      if ([((NSString *) nil_chk(id_)) hasSuffix:((ComKloudtekUtilCryptoDigestAlgorithmEnum *) nil_chk(alg))->jceId_] || [id_ hasSuffix:[alg name]]) {
        return alg;
      }
    }
  }
  return nil;
}

+ (void)initialize {
  if (self == [ComKloudtekUtilCryptoDigestAlgorithmEnum class]) {
    ComKloudtekUtilCryptoDigestAlgorithmEnum_MD5 = [[ComKloudtekUtilCryptoDigestAlgorithmEnum alloc] initWithInt:16 withNSString:@"MD5" withInt:0];
    ComKloudtekUtilCryptoDigestAlgorithmEnum_SHA1 = [[ComKloudtekUtilCryptoDigestAlgorithmEnum alloc] initWithInt:20 withNSString:@"SHA-1" withNSString:@"SHA1" withInt:1];
    ComKloudtekUtilCryptoDigestAlgorithmEnum_SHA256 = [[ComKloudtekUtilCryptoDigestAlgorithmEnum alloc] initWithInt:32 withNSString:@"SHA-256" withNSString:@"SHA256" withInt:2];
    ComKloudtekUtilCryptoDigestAlgorithmEnum_SHA512 = [[ComKloudtekUtilCryptoDigestAlgorithmEnum alloc] initWithInt:64 withNSString:@"SHA-512" withNSString:@"SHA512" withInt:3];
    ComKloudtekUtilCryptoDigestAlgorithmEnum_initialized = YES;
  }
}

+ (IOSObjectArray *)values {
  return [IOSObjectArray arrayWithObjects:ComKloudtekUtilCryptoDigestAlgorithmEnum_values count:4 type:[IOSClass classWithClass:[ComKloudtekUtilCryptoDigestAlgorithmEnum class]]];
}

+ (ComKloudtekUtilCryptoDigestAlgorithmEnum *)valueOfWithNSString:(NSString *)name {
  for (int i = 0; i < 4; i++) {
    ComKloudtekUtilCryptoDigestAlgorithmEnum *e = ComKloudtekUtilCryptoDigestAlgorithmEnum_values[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw [[JavaLangIllegalArgumentException alloc] initWithNSString:name];
  return nil;
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "initWithInt:", "DigestAlgorithm", NULL, 0x2, NULL },
    { "initWithInt:withNSString:", "DigestAlgorithm", NULL, 0x2, NULL },
    { "init__WithInt:withNSString:", "init", "V", 0x2, NULL },
    { "getJceId", NULL, "Ljava.lang.String;", 0x1, NULL },
    { "getHashLen", NULL, "I", 0x1, NULL },
    { "getWithNSString:", "get", "Lcom.kloudtek.kryptotek.DigestAlgorithm;", 0x9, NULL },
  };
  static const char *superclass_type_args[] = {"Lcom.kloudtek.kryptotek.DigestAlgorithm;"};
  static J2ObjcClassInfo _ComKloudtekUtilCryptoDigestAlgorithmEnum = { "DigestAlgorithm", "com.kloudtek.kryptotek", NULL, 0x4011, 6, methods, 0, NULL, 1, superclass_type_args};
  return &_ComKloudtekUtilCryptoDigestAlgorithmEnum;
}

@end
