//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: _java/com/kloudtek/util/crypto/CryptoUtils.java
//
//  Created by yinkaf on 6/14/14.
//

#ifndef _ComKloudtekUtilCryptoCryptoUtils_H_
#define _ComKloudtekUtilCryptoCryptoUtils_H_

@class ComKloudtekUtilCryptoAsymmetricAlgorithmEnum;
@class ComKloudtekUtilCryptoCryptoEngine;
@class ComKloudtekUtilCryptoDigestAlgorithmEnum;
@class ComKloudtekUtilCryptoSymmetricAlgorithmEnum;
@class IOSByteArray;
@class IOSCharArray;
@class IOSObjectArray;
@class JavaNioByteBuffer;
@class JavaNioCharBuffer;
@class JavaSecurityKeyPair;
@class JavaSecuritySecureRandom;
@class JavaUtilLoggingLogger;
@protocol JavaSecurityInterfacesRSAPublicKey;
@protocol JavaSecurityKey;
@protocol JavaSecurityPrivateKey;
@protocol JavaSecurityPublicKey;
@protocol JavaUtilCollection;
@protocol JavaxCryptoSecretKey;

#import "JreEmulation.h"

@interface ComKloudtekUtilCryptoCryptoUtils : NSObject {
}

+ (id<JavaxCryptoSecretKey>)generateKeyWithComKloudtekUtilCryptoSymmetricAlgorithmEnum:(ComKloudtekUtilCryptoSymmetricAlgorithmEnum *)alg
                                                                               withInt:(int)keysize;

+ (JavaSecurityKeyPair *)generateRSA4096KeyPair;

+ (JavaSecurityKeyPair *)generateRSA2048KeyPair;

+ (id<JavaxCryptoSecretKey>)generateHmacKeyWithComKloudtekUtilCryptoDigestAlgorithmEnum:(ComKloudtekUtilCryptoDigestAlgorithmEnum *)algorithm;

+ (id<JavaxCryptoSecretKey>)generatePBEAESKeyWithCharArray:(IOSCharArray *)key
                                                   withInt:(int)iterations
                                             withByteArray:(IOSByteArray *)salt
                                                   withInt:(int)keyLen;

+ (id<JavaSecurityInterfacesRSAPublicKey>)readRSAPublicKeyWithByteArray:(IOSByteArray *)key;

+ (id<JavaSecurityPrivateKey>)readRSAPrivateKeyWithByteArray:(IOSByteArray *)encodedPriKey;

+ (id<JavaxCryptoSecretKey>)readAESKeyWithByteArray:(IOSByteArray *)encodedAesKey;

+ (id<JavaxCryptoSecretKey>)readHMACKeyWithComKloudtekUtilCryptoDigestAlgorithmEnum:(ComKloudtekUtilCryptoDigestAlgorithmEnum *)algorithm
                                                                      withByteArray:(IOSByteArray *)encodedKey;

+ (IOSByteArray *)aesDecryptWithJavaxCryptoSecretKey:(id<JavaxCryptoSecretKey>)key
                                       withByteArray:(IOSByteArray *)data;

+ (IOSByteArray *)rsaEncryptWithJavaSecurityPublicKey:(id<JavaSecurityPublicKey>)key
                                        withByteArray:(IOSByteArray *)data;

+ (void)rsaVerifySignatureWithComKloudtekUtilCryptoDigestAlgorithmEnum:(ComKloudtekUtilCryptoDigestAlgorithmEnum *)digestAlgorithms
                                             withJavaSecurityPublicKey:(id<JavaSecurityPublicKey>)key
                                                         withByteArray:(IOSByteArray *)data
                                                         withByteArray:(IOSByteArray *)signature;

+ (IOSByteArray *)rsaEncryptWithByteArray:(IOSByteArray *)key
                            withByteArray:(IOSByteArray *)data;

+ (IOSByteArray *)aesEncryptWithJavaxCryptoSecretKey:(id<JavaxCryptoSecretKey>)key
                                       withByteArray:(IOSByteArray *)data;

+ (id<JavaxCryptoSecretKey>)generateAes128Key;

+ (id<JavaxCryptoSecretKey>)generateAes192Key;

+ (id<JavaxCryptoSecretKey>)generateAes256Key;

+ (IOSByteArray *)hmacSha256WithJavaxCryptoSecretKey:(id<JavaxCryptoSecretKey>)key
                                       withByteArray:(IOSByteArray *)data;

+ (JavaSecurityKeyPair *)generateKeyPairWithComKloudtekUtilCryptoAsymmetricAlgorithmEnum:(ComKloudtekUtilCryptoAsymmetricAlgorithmEnum *)alg
                                                                                 withInt:(int)keysize;

+ (IOSByteArray *)decryptWithJavaSecurityKey:(id<JavaSecurityKey>)key
                               withByteArray:(IOSByteArray *)data
                                withNSString:(NSString *)alg;

+ (id<JavaxCryptoSecretKey>)generateAesKeyWithInt:(int)keysize;

+ (IOSByteArray *)rsaDecryptWithByteArray:(IOSByteArray *)key
                            withByteArray:(IOSByteArray *)data;

+ (void)verifySignatureWithNSString:(NSString *)algorithm
          withJavaSecurityPublicKey:(id<JavaSecurityPublicKey>)key
                      withByteArray:(IOSByteArray *)data
                      withByteArray:(IOSByteArray *)signature;

+ (IOSByteArray *)aesEncryptWithByteArray:(IOSByteArray *)key
                            withByteArray:(IOSByteArray *)data;

+ (IOSByteArray *)aesDecryptWithByteArray:(IOSByteArray *)key
                            withByteArray:(IOSByteArray *)data;

+ (IOSByteArray *)hmacSha512WithJavaxCryptoSecretKey:(id<JavaxCryptoSecretKey>)key
                                       withByteArray:(IOSByteArray *)data;

+ (IOSByteArray *)encryptWithJavaSecurityKey:(id<JavaSecurityKey>)key
                               withByteArray:(IOSByteArray *)data
                                withNSString:(NSString *)alg;

+ (IOSByteArray *)cryptWithJavaSecurityKey:(id<JavaSecurityKey>)key
                             withByteArray:(IOSByteArray *)data
                              withNSString:(NSString *)alg
                                   withInt:(int)mode;

+ (IOSByteArray *)hmacWithComKloudtekUtilCryptoDigestAlgorithmEnum:(ComKloudtekUtilCryptoDigestAlgorithmEnum *)algorithm
                                          withJavaxCryptoSecretKey:(id<JavaxCryptoSecretKey>)key
                                                     withByteArray:(IOSByteArray *)data;

+ (IOSByteArray *)rsaDecryptWithJavaSecurityPrivateKey:(id<JavaSecurityPrivateKey>)key
                                         withByteArray:(IOSByteArray *)data;

+ (IOSByteArray *)rsaSignWithComKloudtekUtilCryptoDigestAlgorithmEnum:(ComKloudtekUtilCryptoDigestAlgorithmEnum *)digestAlgorithms
                                           withJavaSecurityPrivateKey:(id<JavaSecurityPrivateKey>)key
                                                        withByteArray:(IOSByteArray *)data;

+ (IOSByteArray *)hmacSha1WithJavaxCryptoSecretKey:(id<JavaxCryptoSecretKey>)key
                                     withByteArray:(IOSByteArray *)data;

+ (IOSByteArray *)signWithNSString:(NSString *)algorithm
        withJavaSecurityPrivateKey:(id<JavaSecurityPrivateKey>)key
                     withByteArray:(IOSByteArray *)data;

+ (IOSByteArray *)hmacWithJavaxCryptoSecretKey:(id<JavaxCryptoSecretKey>)key
  withComKloudtekUtilCryptoDigestAlgorithmEnum:(ComKloudtekUtilCryptoDigestAlgorithmEnum *)algorithms
                                 withByteArray:(IOSByteArray *)data;

+ (IOSObjectArray *)splitKeyWithByteArray:(IOSByteArray *)key
                                  withInt:(int)amount;

+ (void)zeroWithCharArray2:(IOSObjectArray *)data;

+ (void)zeroWithByteArray2:(IOSObjectArray *)data;

+ (void)zeroWithJavaNioCharBuffer:(JavaNioCharBuffer *)data;

+ (void)zeroWithJavaNioByteBuffer:(JavaNioByteBuffer *)data;

+ (IOSByteArray *)mergeSplitKeyWithByteArray2:(IOSObjectArray *)keys;

+ (IOSByteArray *)mergeSplitKeyWithJavaUtilCollection:(id<JavaUtilCollection>)keys;

+ (IOSByteArray *)xor__WithByteArray:(IOSByteArray *)b1
                       withByteArray:(IOSByteArray *)b2;

+ (JavaSecuritySecureRandom *)rng;

+ (void)destroyWithJavaSecurityKey:(id<JavaSecurityKey>)key;

+ (IOSCharArray *)generateRandomPasswordWithInt:(int)len
                                    withBoolean:(BOOL)allCaps;

- (id)init;

@end

FOUNDATION_EXPORT BOOL ComKloudtekUtilCryptoCryptoUtils_initialized;
J2OBJC_STATIC_INIT(ComKloudtekUtilCryptoCryptoUtils)

FOUNDATION_EXPORT IOSCharArray *ComKloudtekUtilCryptoCryptoUtils_symbolsAllCaps_;
J2OBJC_STATIC_FIELD_GETTER(ComKloudtekUtilCryptoCryptoUtils, symbolsAllCaps_, IOSCharArray *)

FOUNDATION_EXPORT IOSCharArray *ComKloudtekUtilCryptoCryptoUtils_symbols_;
J2OBJC_STATIC_FIELD_GETTER(ComKloudtekUtilCryptoCryptoUtils, symbols_, IOSCharArray *)

FOUNDATION_EXPORT JavaUtilLoggingLogger *ComKloudtekUtilCryptoCryptoUtils_logger_;
J2OBJC_STATIC_FIELD_GETTER(ComKloudtekUtilCryptoCryptoUtils, logger_, JavaUtilLoggingLogger *)

FOUNDATION_EXPORT ComKloudtekUtilCryptoCryptoEngine *ComKloudtekUtilCryptoCryptoUtils_provider_;
J2OBJC_STATIC_FIELD_GETTER(ComKloudtekUtilCryptoCryptoUtils, provider_, ComKloudtekUtilCryptoCryptoEngine *)
J2OBJC_STATIC_FIELD_SETTER(ComKloudtekUtilCryptoCryptoUtils, provider_, ComKloudtekUtilCryptoCryptoEngine *)

FOUNDATION_EXPORT JavaSecuritySecureRandom *ComKloudtekUtilCryptoCryptoUtils_rng__;
J2OBJC_STATIC_FIELD_GETTER(ComKloudtekUtilCryptoCryptoUtils, rng__, JavaSecuritySecureRandom *)

#endif // _ComKloudtekUtilCryptoCryptoUtils_H_
