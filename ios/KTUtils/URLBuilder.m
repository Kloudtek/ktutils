//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: _java/com/kloudtek/util/URLBuilder.java
//
//  Created by yinkaf on 6/14/14.
//

#include "IOSObjectArray.h"
#include "StringUtils.h"
#include "URLBuilder.h"
#include "java/lang/Boolean.h"
#include "java/lang/Byte.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/Integer.h"
#include "java/lang/Long.h"
#include "java/lang/RuntimeException.h"
#include "java/lang/StringBuilder.h"
#include "java/net/MalformedURLException.h"
#include "java/net/URI.h"
#include "java/net/URL.h"
#include "java/util/ArrayList.h"
#include "java/util/List.h"
#include "java/util/StringTokenizer.h"

@implementation KTUtilURLBuilder

- (id)initKTUtilURLBuilderWithNSString:(NSString *)url {
  if (self = [super init]) {
    parameters_ = [[JavaUtilArrayList alloc] init];
    if (url == nil) {
      @throw [[JavaLangIllegalArgumentException alloc] initWithNSString:@"url mustn't be null"];
    }
    self->baseUrl_ = [self extractParamsWithNSString:url];
  }
  return self;
}

- (id)initWithNSString:(NSString *)url {
  return [self initKTUtilURLBuilderWithNSString:url];
}

- (id)initWithNSString:(NSString *)baseUrl
     withNSStringArray:(IOSObjectArray *)path {
  if (self = [self initKTUtilURLBuilderWithNSString:baseUrl]) {
    {
      IOSObjectArray *a__ = path;
      NSString * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
      NSString * const *e__ = b__ + a__->size_;
      while (b__ < e__) {
        NSString *p = (*b__++);
        (void) [self addPathWithNSString:p];
      }
    }
  }
  return self;
}

- (NSString *)getBaseUrl {
  return baseUrl_;
}

- (id<JavaUtilList>)getParameters {
  return parameters_;
}

- (KTUtilURLBuilder *)addPathWithNSString:(NSString *)path {
  JavaLangStringBuilder *url = [[JavaLangStringBuilder alloc] initWithNSString:baseUrl_];
  BOOL urlSlash = [((NSString *) nil_chk(baseUrl_)) hasSuffix:@"/"];
  BOOL pathSlash = [((NSString *) nil_chk(path)) hasPrefix:@"/"];
  if (!urlSlash && !pathSlash) {
    (void) [url appendWithNSString:@"/"];
  }
  else if (urlSlash && pathSlash) {
    if (((int) [path length]) == 1) {
      return self;
    }
    path = [path substring:1];
  }
  (void) [url appendWithNSString:[self extractParamsWithNSString:path]];
  baseUrl_ = [url description];
  return self;
}

- (KTUtilURLBuilder *)addWithNSString:(NSString *)key
                         withNSString:(NSString *)value {
  (void) [self addEncodedWithNSString:[KTUtilStringUtils urlEncodeWithNSString:key] withNSString:[KTUtilStringUtils urlEncodeWithNSString:value]];
  return self;
}

- (KTUtilURLBuilder *)addWithNSString:(NSString *)key
                             withLong:(long long int)value {
  (void) [self addEncodedWithNSString:[KTUtilStringUtils urlEncodeWithNSString:key] withNSString:[JavaLangLong toStringWithLong:value]];
  return self;
}

- (KTUtilURLBuilder *)addWithNSString:(NSString *)key
                              withInt:(int)value {
  (void) [self addEncodedWithNSString:[KTUtilStringUtils urlEncodeWithNSString:key] withNSString:[JavaLangInteger toStringWithInt:value]];
  return self;
}

- (KTUtilURLBuilder *)addWithNSString:(NSString *)key
                             withByte:(char)value {
  (void) [self addEncodedWithNSString:[KTUtilStringUtils urlEncodeWithNSString:key] withNSString:[JavaLangByte toStringWithByte:value]];
  return self;
}

- (KTUtilURLBuilder *)addWithNSString:(NSString *)key
                          withBoolean:(BOOL)value {
  (void) [self addEncodedWithNSString:[KTUtilStringUtils urlEncodeWithNSString:key] withNSString:[JavaLangBoolean toStringWithBoolean:value]];
  return self;
}

- (KTUtilURLBuilder *)addEncodedWithNSString:(NSString *)key
                                withNSString:(NSString *)value {
  [((id<JavaUtilList>) nil_chk(parameters_)) addWithId:[[KTUtilURLBuilder_Param alloc] initWithKTUtilURLBuilder:self withNSString:key withNSString:value]];
  return self;
}

- (JavaNetURL *)toUrl {
  @try {
    return [[JavaNetURL alloc] initWithNSString:[self description]];
  }
  @catch (JavaNetMalformedURLException *e) {
    @throw [[JavaLangRuntimeException alloc] initWithJavaLangThrowable:e];
  }
}

- (JavaNetURI *)toUri {
  return [JavaNetURI createWithNSString:[self description]];
}

- (NSString *)description {
  JavaLangStringBuilder *url = [[JavaLangStringBuilder alloc] initWithNSString:baseUrl_];
  BOOL first = YES;
  for (KTUtilURLBuilder_Param * __strong parameter in nil_chk(parameters_)) {
    if (first) {
      first = NO;
      (void) [url appendWithNSString:@"?"];
    }
    else {
      (void) [url appendWithNSString:@"&"];
    }
    (void) [((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([url appendWithNSString:((KTUtilURLBuilder_Param *) nil_chk(parameter))->key_])) appendWithNSString:@"="])) appendWithNSString:parameter->value_];
  }
  return [url description];
}

- (NSString *)extractParamsWithNSString:(NSString *)baseUrl {
  int idx = [((NSString *) nil_chk(baseUrl)) indexOf:'?'];
  if (idx == -1) {
    return baseUrl;
  }
  else {
    JavaUtilStringTokenizer *tok = [[JavaUtilStringTokenizer alloc] initWithNSString:[baseUrl substring:idx + 1] withNSString:@"&"];
    while ([tok hasMoreTokens]) {
      NSString *p = [tok nextToken];
      int tIdx = [((NSString *) nil_chk(p)) indexOfString:@"="];
      if (tIdx == -1) {
        [((id<JavaUtilList>) nil_chk(parameters_)) addWithId:[[KTUtilURLBuilder_Param alloc] initWithKTUtilURLBuilder:self withNSString:p withNSString:@""]];
      }
      else {
        [((id<JavaUtilList>) nil_chk(parameters_)) addWithId:[[KTUtilURLBuilder_Param alloc] initWithKTUtilURLBuilder:self withNSString:[p substring:0 endIndex:tIdx] withNSString:[p substring:tIdx + 1 endIndex:((int) [p length])]]];
      }
    }
    return [baseUrl substring:0 endIndex:idx];
  }
}

- (void)copyAllFieldsTo:(KTUtilURLBuilder *)other {
  [super copyAllFieldsTo:other];
  other->baseUrl_ = baseUrl_;
  other->parameters_ = parameters_;
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "initWithNSString:", "URLBuilder", NULL, 0x1, NULL },
    { "initWithNSString:withNSStringArray:", "URLBuilder", NULL, 0x81, NULL },
    { "getBaseUrl", NULL, "Ljava.lang.String;", 0x1, NULL },
    { "getParameters", NULL, "Ljava.util.List;", 0x1, NULL },
    { "addPathWithNSString:", "addPath", "Lcom.kloudtek.util.URLBuilder;", 0x1, NULL },
    { "addWithNSString:withNSString:", "add", "Lcom.kloudtek.util.URLBuilder;", 0x1, NULL },
    { "addWithNSString:withLong:", "add", "Lcom.kloudtek.util.URLBuilder;", 0x1, NULL },
    { "addWithNSString:withInt:", "add", "Lcom.kloudtek.util.URLBuilder;", 0x1, NULL },
    { "addWithNSString:withByte:", "add", "Lcom.kloudtek.util.URLBuilder;", 0x1, NULL },
    { "addWithNSString:withBoolean:", "add", "Lcom.kloudtek.util.URLBuilder;", 0x1, NULL },
    { "addEncodedWithNSString:withNSString:", "addEncoded", "Lcom.kloudtek.util.URLBuilder;", 0x1, NULL },
    { "toUrl", NULL, "Ljava.net.URL;", 0x1, NULL },
    { "toUri", NULL, "Ljava.net.URI;", 0x1, NULL },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL },
    { "extractParamsWithNSString:", "extractParams", "Ljava.lang.String;", 0x2, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "baseUrl_", NULL, 0x2, "Ljava.lang.String;", NULL,  },
    { "parameters_", NULL, 0x12, "Ljava.util.List;", NULL,  },
  };
  static J2ObjcClassInfo _KTUtilURLBuilder = { "URLBuilder", "com.kloudtek.util", NULL, 0x1, 15, methods, 2, fields, 0, NULL};
  return &_KTUtilURLBuilder;
}

@end

@implementation KTUtilURLBuilder_Param

- (id)initWithKTUtilURLBuilder:(KTUtilURLBuilder *)outer$
                  withNSString:(NSString *)key
                  withNSString:(NSString *)value {
  if (self = [super init]) {
    self->key_ = key;
    self->value_ = value;
  }
  return self;
}

- (void)copyAllFieldsTo:(KTUtilURLBuilder_Param *)other {
  [super copyAllFieldsTo:other];
  other->key_ = key_;
  other->value_ = value_;
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "initWithKTUtilURLBuilder:withNSString:withNSString:", "Param", NULL, 0x1, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "key_", NULL, 0x2, "Ljava.lang.String;", NULL,  },
    { "value_", NULL, 0x2, "Ljava.lang.String;", NULL,  },
  };
  static J2ObjcClassInfo _KTUtilURLBuilder_Param = { "Param", "com.kloudtek.util", "URLBuilder", 0x1, 1, methods, 2, fields, 0, NULL};
  return &_KTUtilURLBuilder_Param;
}

@end
